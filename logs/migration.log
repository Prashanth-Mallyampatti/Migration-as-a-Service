Using /etc/ansible/ansible.cfg as config file

PLAY [main] *************************************************************************************************************************************************

TASK [Detach Interface] *************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:2b:e1:5c', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh domiflist \"t1_VM1\" | grep -w \"t1VM1if1\" ; if [ $? -eq 0 ] ; then virsh detach-interface --domain \"t1_VM1\" --type direct --config ; fi\n", "delta": "0:00:00.045200", "end": "2019-11-18 03:42:36.173954", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:2b:e1:5c", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 03:42:36.128754", "stderr": "", "stderr_lines": [], "stdout": "macvtap0   direct     t1VM1if1   rtl8139     52:54:00:2b:e1:5c\nInterface detached successfully", "stdout_lines": ["macvtap0   direct     t1VM1if1   rtl8139     52:54:00:2b:e1:5c", "Interface detached successfully"]}

TASK [Shutdown VMs] *****************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:2b:e1:5c', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh list --state-shutoff | grep -w \"t1_VM1\" ; if [ $? -ne 0 ] ; then virsh shutdown \"t1_VM1\" ; fi\n", "delta": "0:00:00.127472", "end": "2019-11-18 03:42:36.527465", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:2b:e1:5c", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 03:42:36.399993", "stderr": "", "stderr_lines": [], "stdout": "Domain t1_VM1 is being shutdown", "stdout_lines": ["Domain t1_VM1 is being shutdown"]}

PLAY [worker] ***********************************************************************************************************************************************

TASK [Migrate VM images] ************************************************************************************************************************************
failed: [99.99.99.2] (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:2b:e1:5c', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "checksum": "41cff74b446b3c3a412dce52e0915603bc08acf2", "expected_checksum": "11bdf3e8917b026d856abf034f3a9e472b05911d", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:2b:e1:5c", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "msg": "Copied file does not match the expected checksum. Transfer failed."}

PLAY RECAP **************************************************************************************************************************************************
99.99.99.2                 : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
localhost                  : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /etc/ansible/ansible.cfg as config file

PLAY [main] *************************************************************************************************************************************************

TASK [Detach Interface] *************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh domiflist \"t1_VM1\" | grep -w \"t1VM1if1\" ; if [ $? -eq 0 ] ; then virsh detach-interface --domain \"t1_VM1\" --type direct --config ; fi\n", "delta": "0:00:00.023562", "end": "2019-11-18 03:50:45.624109", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 03:50:45.600547", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Shutdown VMs] *****************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh list --state-shutoff | grep -w \"t1_VM1\" ; if [ $? -ne 0 ] ; then virsh shutdown \"t1_VM1\" ; fi\n", "delta": "0:00:00.020328", "end": "2019-11-18 03:50:45.906780", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 03:50:45.886452", "stderr": "", "stderr_lines": [], "stdout": " -     t1_VM1                         shut off", "stdout_lines": [" -     t1_VM1                         shut off"]}

PLAY [worker] ***********************************************************************************************************************************************

TASK [Migrate VM images] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "checksum": "41cff74b446b3c3a412dce52e0915603bc08acf2", "dest": "/var/lib/libvirt/images/t1_VM1.qcow2", "gid": 0, "group": "root", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "md5sum": "2f6ecf9672a6d5773f7e128806763aa7", "mode": "0644", "owner": "root", "size": 10739318784, "src": "/root/.ansible/tmp/ansible-tmp-1574049045.98-202324241758085/source", "state": "file", "uid": 0}

TASK [Migrate VM templates] *********************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "checksum": "713e53f22c957623f54f9e47094bab05c28a5b82", "dest": "/etc/libvirt/qemu/t1_VM1.xml", "gid": 0, "group": "root", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "md5sum": "9971f41cb19f5c5083f8b174fc0861f4", "mode": "0644", "owner": "root", "size": 4252, "src": "/root/.ansible/tmp/ansible-tmp-1574049310.65-193065841914947/source", "state": "file", "uid": 0}

TASK [Get list of running VMs] ******************************************************************************************************************************
ok: [99.99.99.2] => {"changed": false, "cmd": ["virsh", "list", "--name"], "delta": "0:00:00.076467", "end": "2019-11-18 03:55:11.400726", "rc": 0, "start": "2019-11-18 03:55:11.324259", "stderr": "", "stderr_lines": [], "stdout": "t1_VM4", "stdout_lines": ["t1_VM4"]}

TASK [Define VM] ********************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "created": "t1_VM1", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "warnings": ["'xml' is given - ignoring 'name'"]}

TASK [Create VM] ********************************************************************************************************************************************
ok: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "create": 0, "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}]}

TASK [Start VM] *********************************************************************************************************************************************
ok: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}]}

TASK [Create VETH Pairs] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t1br1if1_m\" ; if [ $? -ne 0 ] ; then ip link add \"t1VM1if1_m\" type veth peer name \"t1br1if1_m\" ; fi\nip link set dev \"t1br1if1_m\" up\nip link set dev \"t1VM1if1_m\" up\n", "delta": "0:00:00.033740", "end": "2019-11-18 03:55:13.893601", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 03:55:13.859861", "stderr": "Device \"t1br1if1_m\" does not exist.", "stderr_lines": ["Device \"t1br1if1_m\" does not exist."], "stdout": "", "stdout_lines": []}

TASK [Attach VETH Pairs] ************************************************************************************************************************************
failed: [99.99.99.2] (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t1br1if1_m\" ; if [ $? -eq 0 ] ; then ip link set \"t1br1if1_m\" netns \"t1ns1\" ; fi\nip netns exec \"t1ns1\" brctl show \"t1br1\" | grep -w 't1br1if1_m' ; if [ $? -ne 0 ] ; then ip netns exec \"t1ns1\" brctl addif \"t1br1\" \"t1br1if1_m\" ; fi\nvirsh domiflist \"t1_VM1\" | grep -w \"t1VM1if1_m\" ; if [ $? -ne 0 ] ; then virsh attach-interface --domain \"t1_VM1\" direct \"t1VM1if1_m\" --live --persistent --mac \"\" ; fi\n", "delta": "0:00:00.169578", "end": "2019-11-18 03:55:14.347195", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "msg": "non-zero return code", "rc": 1, "start": "2019-11-18 03:55:14.177617", "stderr": "error: Failed to get option 'mac': Option argument is empty", "stderr_lines": ["error: Failed to get option 'mac': Option argument is empty"], "stdout": "21: t1br1if1_m@t1VM1if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000\n    link/ether 9e:41:08:b6:91:bb brd ff:ff:ff:ff:ff:ff", "stdout_lines": ["21: t1br1if1_m@t1VM1if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000", "    link/ether 9e:41:08:b6:91:bb brd ff:ff:ff:ff:ff:ff"]}

PLAY RECAP **************************************************************************************************************************************************
99.99.99.2                 : ok=7    changed=4    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
localhost                  : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /etc/ansible/ansible.cfg as config file

PLAY [main] *************************************************************************************************************************************************

TASK [Detach Interface] *************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh domiflist \"t1_VM1\" | grep -w \"t1VM1if1\" ; if [ $? -eq 0 ] ; then virsh detach-interface --domain \"t1_VM1\" --type direct --config ; fi\n", "delta": "0:00:00.017895", "end": "2019-11-18 07:32:15.236061", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 07:32:15.218166", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

TASK [Shutdown VMs] *****************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh list --state-shutoff | grep -w \"t1_VM1\" ; if [ $? -ne 0 ] ; then virsh shutdown \"t1_VM1\" ; fi\n", "delta": "0:00:00.019170", "end": "2019-11-18 07:32:15.478259", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 07:32:15.459089", "stderr": "", "stderr_lines": [], "stdout": " -     t1_VM1                         shut off", "stdout_lines": [" -     t1_VM1                         shut off"]}

PLAY [worker] ***********************************************************************************************************************************************

TASK [Migrate VM images] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "attempts": 1, "changed": true, "checksum": "477901962cb5e5523656dde19f0ce82e7945bbd2", "dest": "/var/lib/libvirt/images/t1_VM1.qcow2", "gid": 0, "group": "root", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "md5sum": "2a9454191abec0b561f3f6c78f00a014", "mode": "0644", "owner": "root", "size": 10739318784, "src": "/root/.ansible/tmp/ansible-tmp-1574062335.55-178509291623355/source", "state": "file", "uid": 0}

TASK [Migrate VM templates] *********************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "checksum": "909ad39a4f54abae628eedb700b7947cc130b37c", "dest": "/etc/libvirt/qemu/t1_VM1.xml", "gid": 0, "group": "root", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "md5sum": "e879f7b6e6759a7bad5bf2d364f6ccd1", "mode": "0644", "owner": "root", "size": 4487, "src": "/root/.ansible/tmp/ansible-tmp-1574062609.47-160361580606673/source", "state": "file", "uid": 0}

TASK [Get list of running VMs] ******************************************************************************************************************************
ok: [99.99.99.2] => {"changed": false, "cmd": ["virsh", "list", "--name"], "delta": "0:00:00.022834", "end": "2019-11-18 07:36:50.153925", "rc": 0, "start": "2019-11-18 07:36:50.131091", "stderr": "", "stderr_lines": [], "stdout": "t1_VM4", "stdout_lines": ["t1_VM4"]}

TASK [Define VM] ********************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "created": "t1_VM1", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "warnings": ["'xml' is given - ignoring 'name'"]}

TASK [Create VM] ********************************************************************************************************************************************
ok: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "create": 0, "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}]}

TASK [Start VM] *********************************************************************************************************************************************
ok: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}]}

TASK [Create VETH Pairs] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t1br1if1_m\" ; if [ $? -ne 0 ] ; then ip link add \"t1VM1if1_m\" type veth peer name \"t1br1if1_m\" ; fi\nip link set dev \"t1br1if1_m\" up\nip link set dev \"t1VM1if1_m\" up\n", "delta": "0:00:00.020510", "end": "2019-11-18 07:36:52.461519", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 07:36:52.441009", "stderr": "Device \"t1br1if1_m\" does not exist.", "stderr_lines": ["Device \"t1br1if1_m\" does not exist."], "stdout": "", "stdout_lines": []}

TASK [Attach VETH Pairs] ************************************************************************************************************************************
failed: [99.99.99.2] (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t1br1if1_m\" ; if [ $? -eq 0 ] ; then ip link set \"t1br1if1_m\" netns \"t1ns1\" ; fi\nip netns exec \"t1ns1\" brctl show \"t1br1\" | grep -w 't1br1if1_m' ; if [ $? -ne 0 ] ; then ip netns exec \"t1ns1\" brctl addif \"t1br1\" \"t1br1if1_m\" ; fi\nvirsh domiflist \"t1_VM1\" | grep -w \"t1VM1if1_m\" ; if [ $? -ne 0 ] ; then virsh attach-interface --domain \"t1_VM1\" direct \"t1VM1if1_m\" --live --persistent --mac \"\" ; fi\n", "delta": "0:00:00.142175", "end": "2019-11-18 07:36:52.897666", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "msg": "non-zero return code", "rc": 1, "start": "2019-11-18 07:36:52.755491", "stderr": "error: Failed to get option 'mac': Option argument is empty", "stderr_lines": ["error: Failed to get option 'mac': Option argument is empty"], "stdout": "23: t1br1if1_m@t1VM1if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000\n    link/ether ca:61:42:ea:44:77 brd ff:ff:ff:ff:ff:ff", "stdout_lines": ["23: t1br1if1_m@t1VM1if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000", "    link/ether ca:61:42:ea:44:77 brd ff:ff:ff:ff:ff:ff"]}

PLAY RECAP **************************************************************************************************************************************************
99.99.99.2                 : ok=7    changed=4    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
localhost                  : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /etc/ansible/ansible.cfg as config file

PLAY [main] *************************************************************************************************************************************************

TASK [Detach Interface] *************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't2ns1', u'bridge_name': u't2br1'}, {u'vmif_m': u't2VM1if1_m', u'vm_mac': u'52:54:00:c2:e3:ee', u'name': u't2_VM1', u'vmif': u't2VM1if1', u'brif_m': u't2br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh domiflist \"t2_VM1\" | grep -w \"t2VM1if1\" ; if [ $? -eq 0 ] ; then virsh detach-interface --domain \"t2_VM1\" --type direct --config ; fi\n", "delta": "0:00:00.053247", "end": "2019-11-18 07:50:17.135052", "item": [{"bridge_name": "t2br1", "ns_name": "t2ns1"}, {"brif_m": "t2br1if1_m", "name": "t2_VM1", "vm_mac": "52:54:00:c2:e3:ee", "vmif": "t2VM1if1", "vmif_m": "t2VM1if1_m"}], "rc": 0, "start": "2019-11-18 07:50:17.081805", "stderr": "", "stderr_lines": [], "stdout": "macvtap0   direct     t2VM1if1   rtl8139     52:54:00:c2:e3:ee\nInterface detached successfully", "stdout_lines": ["macvtap0   direct     t2VM1if1   rtl8139     52:54:00:c2:e3:ee", "Interface detached successfully"]}

TASK [Shutdown VMs] *****************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't2ns1', u'bridge_name': u't2br1'}, {u'vmif_m': u't2VM1if1_m', u'vm_mac': u'52:54:00:c2:e3:ee', u'name': u't2_VM1', u'vmif': u't2VM1if1', u'brif_m': u't2br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh list --state-shutoff | grep -w \"t2_VM1\" ; if [ $? -ne 0 ] ; then virsh shutdown \"t2_VM1\" ; fi\n", "delta": "0:00:00.114472", "end": "2019-11-18 07:50:17.503463", "item": [{"bridge_name": "t2br1", "ns_name": "t2ns1"}, {"brif_m": "t2br1if1_m", "name": "t2_VM1", "vm_mac": "52:54:00:c2:e3:ee", "vmif": "t2VM1if1", "vmif_m": "t2VM1if1_m"}], "rc": 0, "start": "2019-11-18 07:50:17.388991", "stderr": "", "stderr_lines": [], "stdout": "Domain t2_VM1 is being shutdown", "stdout_lines": ["Domain t2_VM1 is being shutdown"]}

PLAY [worker] ***********************************************************************************************************************************************

TASK [Migrate VM images] ************************************************************************************************************************************
FAILED - RETRYING: Migrate VM images (3 retries left).
changed: [99.99.99.2] => (item=[{u'ns_name': u't2ns1', u'bridge_name': u't2br1'}, {u'vmif_m': u't2VM1if1_m', u'vm_mac': u'52:54:00:c2:e3:ee', u'name': u't2_VM1', u'vmif': u't2VM1if1', u'brif_m': u't2br1if1_m'}]) => {"ansible_loop_var": "item", "attempts": 2, "changed": true, "checksum": "de66c654fcb0daecb237cd8906d5067c44260680", "dest": "/var/lib/libvirt/images/t2_VM1.qcow2", "gid": 0, "group": "root", "item": [{"bridge_name": "t2br1", "ns_name": "t2ns1"}, {"brif_m": "t2br1if1_m", "name": "t2_VM1", "vm_mac": "52:54:00:c2:e3:ee", "vmif": "t2VM1if1", "vmif_m": "t2VM1if1_m"}], "md5sum": "f5a16c5c48d20a52ea0410d2ae11c689", "mode": "0644", "owner": "root", "size": 10739318784, "src": "/root/.ansible/tmp/ansible-tmp-1574063417.58-125955095611459/source", "state": "file", "uid": 0}

TASK [Migrate VM templates] *********************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't2ns1', u'bridge_name': u't2br1'}, {u'vmif_m': u't2VM1if1_m', u'vm_mac': u'52:54:00:c2:e3:ee', u'name': u't2_VM1', u'vmif': u't2VM1if1', u'brif_m': u't2br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "checksum": "b1f427ce890616db624c183f3620b2c629d54088", "dest": "/etc/libvirt/qemu/t2_VM1.xml", "gid": 0, "group": "root", "item": [{"bridge_name": "t2br1", "ns_name": "t2ns1"}, {"brif_m": "t2br1if1_m", "name": "t2_VM1", "vm_mac": "52:54:00:c2:e3:ee", "vmif": "t2VM1if1", "vmif_m": "t2VM1if1_m"}], "md5sum": "6b907483b181cf7e06d5fe7f10915c30", "mode": "0644", "owner": "root", "size": 4487, "src": "/root/.ansible/tmp/ansible-tmp-1574063949.55-76374396236875/source", "state": "file", "uid": 0}

TASK [Get list of running VMs] ******************************************************************************************************************************
ok: [99.99.99.2] => {"changed": false, "cmd": ["virsh", "list", "--name"], "delta": "0:00:00.030743", "end": "2019-11-18 07:59:10.284909", "rc": 0, "start": "2019-11-18 07:59:10.254166", "stderr": "", "stderr_lines": [], "stdout": "t1_VM4\nt1_VM1\nt2_VM4", "stdout_lines": ["t1_VM4", "t1_VM1", "t2_VM4"]}

TASK [Define VM] ********************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't2ns1', u'bridge_name': u't2br1'}, {u'vmif_m': u't2VM1if1_m', u'vm_mac': u'52:54:00:c2:e3:ee', u'name': u't2_VM1', u'vmif': u't2VM1if1', u'brif_m': u't2br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "created": "t2_VM1", "item": [{"bridge_name": "t2br1", "ns_name": "t2ns1"}, {"brif_m": "t2br1if1_m", "name": "t2_VM1", "vm_mac": "52:54:00:c2:e3:ee", "vmif": "t2VM1if1", "vmif_m": "t2VM1if1_m"}], "warnings": ["'xml' is given - ignoring 'name'"]}

TASK [Create VM] ********************************************************************************************************************************************
ok: [99.99.99.2] => (item=[{u'ns_name': u't2ns1', u'bridge_name': u't2br1'}, {u'vmif_m': u't2VM1if1_m', u'vm_mac': u'52:54:00:c2:e3:ee', u'name': u't2_VM1', u'vmif': u't2VM1if1', u'brif_m': u't2br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "create": 0, "item": [{"bridge_name": "t2br1", "ns_name": "t2ns1"}, {"brif_m": "t2br1if1_m", "name": "t2_VM1", "vm_mac": "52:54:00:c2:e3:ee", "vmif": "t2VM1if1", "vmif_m": "t2VM1if1_m"}]}

TASK [Start VM] *********************************************************************************************************************************************
ok: [99.99.99.2] => (item=[{u'ns_name': u't2ns1', u'bridge_name': u't2br1'}, {u'vmif_m': u't2VM1if1_m', u'vm_mac': u'52:54:00:c2:e3:ee', u'name': u't2_VM1', u'vmif': u't2VM1if1', u'brif_m': u't2br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "item": [{"bridge_name": "t2br1", "ns_name": "t2ns1"}, {"brif_m": "t2br1if1_m", "name": "t2_VM1", "vm_mac": "52:54:00:c2:e3:ee", "vmif": "t2VM1if1", "vmif_m": "t2VM1if1_m"}]}

TASK [Create VETH Pairs] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't2ns1', u'bridge_name': u't2br1'}, {u'vmif_m': u't2VM1if1_m', u'vm_mac': u'52:54:00:c2:e3:ee', u'name': u't2_VM1', u'vmif': u't2VM1if1', u'brif_m': u't2br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t2br1if1_m\" ; if [ $? -ne 0 ] ; then ip link add \"t2VM1if1_m\" type veth peer name \"t2br1if1_m\" ; fi\nip link set dev \"t2br1if1_m\" up\nip link set dev \"t2VM1if1_m\" up\n", "delta": "0:00:00.356148", "end": "2019-11-18 07:59:13.350188", "item": [{"bridge_name": "t2br1", "ns_name": "t2ns1"}, {"brif_m": "t2br1if1_m", "name": "t2_VM1", "vm_mac": "52:54:00:c2:e3:ee", "vmif": "t2VM1if1", "vmif_m": "t2VM1if1_m"}], "rc": 0, "start": "2019-11-18 07:59:12.994040", "stderr": "Device \"t2br1if1_m\" does not exist.", "stderr_lines": ["Device \"t2br1if1_m\" does not exist."], "stdout": "", "stdout_lines": []}

TASK [Attach VETH Pairs] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't2ns1', u'bridge_name': u't2br1'}, {u'vmif_m': u't2VM1if1_m', u'vm_mac': u'52:54:00:c2:e3:ee', u'name': u't2_VM1', u'vmif': u't2VM1if1', u'brif_m': u't2br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t2br1if1_m\" ; if [ $? -eq 0 ] ; then ip link set \"t2br1if1_m\" netns \"t2ns1\" ; fi\nip netns exec \"t2ns1\" brctl show \"t2br1\" | grep -w 't2br1if1_m' ; if [ $? -ne 0 ] ; then ip netns exec \"t2ns1\" brctl addif \"t2br1\" \"t2br1if1_m\" ; fi\nvirsh domiflist \"t2_VM1\" | grep -w \"t2VM1if1_m\" ; if [ $? -ne 0 ] ; then virsh attach-interface --domain \"t2_VM1\" direct \"t2VM1if1_m\" --live --persistent --mac \"52:54:00:c2:e3:ee\" ; fi\n", "delta": "0:00:00.340186", "end": "2019-11-18 07:59:13.982031", "item": [{"bridge_name": "t2br1", "ns_name": "t2ns1"}, {"brif_m": "t2br1if1_m", "name": "t2_VM1", "vm_mac": "52:54:00:c2:e3:ee", "vmif": "t2VM1if1", "vmif_m": "t2VM1if1_m"}], "rc": 0, "start": "2019-11-18 07:59:13.641845", "stderr": "", "stderr_lines": [], "stdout": "34: t2br1if1_m@t2VM1if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000\n    link/ether 72:a8:1a:17:fd:62 brd ff:ff:ff:ff:ff:ff\nInterface attached successfully", "stdout_lines": ["34: t2br1if1_m@t2VM1if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000", "    link/ether 72:a8:1a:17:fd:62 brd ff:ff:ff:ff:ff:ff", "Interface attached successfully"]}

TASK [Make all interfaces UP] *******************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't2ns1', u'bridge_name': u't2br1'}, {u'vmif_m': u't2VM1if1_m', u'vm_mac': u'52:54:00:c2:e3:ee', u'name': u't2_VM1', u'vmif': u't2VM1if1', u'brif_m': u't2br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip netns exec \"t2ns1\" ip link set dev \"t2br1if1_m\" up\nip link set dev \"t2VM1if1_m\" up\n", "delta": "0:00:00.037029", "end": "2019-11-18 07:59:14.319739", "item": [{"bridge_name": "t2br1", "ns_name": "t2ns1"}, {"brif_m": "t2br1if1_m", "name": "t2_VM1", "vm_mac": "52:54:00:c2:e3:ee", "vmif": "t2VM1if1", "vmif_m": "t2VM1if1_m"}], "rc": 0, "start": "2019-11-18 07:59:14.282710", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [main] *************************************************************************************************************************************************

TASK [pause] ************************************************************************************************************************************************
Pausing for 60 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [localhost] => {"changed": false, "delta": 60, "echo": true, "rc": 0, "start": "2019-11-18 07:59:14.392472", "stderr": "", "stdout": "Paused for 1.0 minutes", "stop": "2019-11-18 08:00:14.392946", "user_input": ""}

TASK [Undefine Migrated VM at C2] ***************************************************************************************************************************
failed: [localhost] (item=[{u'ns_name': u't2ns1', u'bridge_name': u't2br1'}, {u'vmif_m': u't2VM4if1_m', u'vm_mac': u'52:54:00:90:88:77', u'name': u't2_VM4', u'vmif': u't2VM4if1', u'brif_m': u't2br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh undefine \"t2_VM4\"\n", "delta": "0:00:00.019962", "end": "2019-11-18 08:00:14.594763", "item": [{"bridge_name": "t2br1", "ns_name": "t2ns1"}, {"brif_m": "t2br1if1_m", "name": "t2_VM4", "vm_mac": "52:54:00:90:88:77", "vmif": "t2VM4if1", "vmif_m": "t2VM4if1_m"}], "msg": "non-zero return code", "rc": 1, "start": "2019-11-18 08:00:14.574801", "stderr": "error: failed to get domain 't2_VM4'\nerror: Domain not found: no domain with matching name 't2_VM4'", "stderr_lines": ["error: failed to get domain 't2_VM4'", "error: Domain not found: no domain with matching name 't2_VM4'"], "stdout": "", "stdout_lines": []}

PLAY RECAP **************************************************************************************************************************************************
99.99.99.2                 : ok=9    changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
localhost                  : ok=3    changed=2    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

Using /etc/ansible/ansible.cfg as config file

PLAY [main] *************************************************************************************************************************************************

TASK [Detach Interface] *************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM1if1_m', u'vm_mac': u'52:54:00:d1:89:cf', u'name': u't3_VM1', u'vmif': u't3VM1if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh domiflist \"t3_VM1\" | grep -w \"t3VM1if1\" ; if [ $? -eq 0 ] ; then virsh detach-interface --domain \"t3_VM1\" --type direct --config ; fi\n", "delta": "0:00:00.051366", "end": "2019-11-18 08:30:20.246690", "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM1", "vm_mac": "52:54:00:d1:89:cf", "vmif": "t3VM1if1", "vmif_m": "t3VM1if1_m"}], "rc": 0, "start": "2019-11-18 08:30:20.195324", "stderr": "", "stderr_lines": [], "stdout": "macvtap0   direct     t3VM1if1   rtl8139     52:54:00:d1:89:cf\nInterface detached successfully", "stdout_lines": ["macvtap0   direct     t3VM1if1   rtl8139     52:54:00:d1:89:cf", "Interface detached successfully"]}

TASK [Shutdown VMs] *****************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM1if1_m', u'vm_mac': u'52:54:00:d1:89:cf', u'name': u't3_VM1', u'vmif': u't3VM1if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh list --state-shutoff | grep -w \"t3_VM1\" ; if [ $? -ne 0 ] ; then virsh shutdown \"t3_VM1\" ; fi\n", "delta": "0:00:00.091522", "end": "2019-11-18 08:30:20.619785", "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM1", "vm_mac": "52:54:00:d1:89:cf", "vmif": "t3VM1if1", "vmif_m": "t3VM1if1_m"}], "rc": 0, "start": "2019-11-18 08:30:20.528263", "stderr": "", "stderr_lines": [], "stdout": "Domain t3_VM1 is being shutdown", "stdout_lines": ["Domain t3_VM1 is being shutdown"]}

PLAY [worker] ***********************************************************************************************************************************************

TASK [Migrate VM images] ************************************************************************************************************************************
FAILED - RETRYING: Migrate VM images (3 retries left).
changed: [99.99.99.2] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM1if1_m', u'vm_mac': u'52:54:00:d1:89:cf', u'name': u't3_VM1', u'vmif': u't3VM1if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "attempts": 2, "changed": true, "checksum": "6f59ac69c52ac055f9f4f0cbccd438f85559ff29", "dest": "/var/lib/libvirt/images/t3_VM1.qcow2", "gid": 0, "group": "root", "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM1", "vm_mac": "52:54:00:d1:89:cf", "vmif": "t3VM1if1", "vmif_m": "t3VM1if1_m"}], "md5sum": "6eecf518cb08a1b762a2d08e0e8f3439", "mode": "0644", "owner": "root", "size": 10739318784, "src": "/root/.ansible/tmp/ansible-tmp-1574065820.72-146054166700299/source", "state": "file", "uid": 0}

TASK [Migrate VM templates] *********************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM1if1_m', u'vm_mac': u'52:54:00:d1:89:cf', u'name': u't3_VM1', u'vmif': u't3VM1if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "checksum": "dc8fe46d2625b2595e7b4dfa89736dd159f97d3f", "dest": "/etc/libvirt/qemu/t3_VM1.xml", "gid": 0, "group": "root", "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM1", "vm_mac": "52:54:00:d1:89:cf", "vmif": "t3VM1if1", "vmif_m": "t3VM1if1_m"}], "md5sum": "4ceba1ad1fa8a06b717f11a56b4bd341", "mode": "0644", "owner": "root", "size": 4487, "src": "/root/.ansible/tmp/ansible-tmp-1574066359.6-257893295405196/source", "state": "file", "uid": 0}

TASK [Get list of running VMs] ******************************************************************************************************************************
ok: [99.99.99.2] => {"changed": false, "cmd": ["virsh", "list", "--name"], "delta": "0:00:00.044972", "end": "2019-11-18 08:39:20.295170", "rc": 0, "start": "2019-11-18 08:39:20.250198", "stderr": "", "stderr_lines": [], "stdout": "t1_VM4\nt1_VM1\nt2_VM4\nt2_VM1\nt3_VM4", "stdout_lines": ["t1_VM4", "t1_VM1", "t2_VM4", "t2_VM1", "t3_VM4"]}

TASK [Define VM] ********************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM1if1_m', u'vm_mac': u'52:54:00:d1:89:cf', u'name': u't3_VM1', u'vmif': u't3VM1if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "created": "t3_VM1", "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM1", "vm_mac": "52:54:00:d1:89:cf", "vmif": "t3VM1if1", "vmif_m": "t3VM1if1_m"}], "warnings": ["'xml' is given - ignoring 'name'"]}

TASK [Create VM] ********************************************************************************************************************************************
ok: [99.99.99.2] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM1if1_m', u'vm_mac': u'52:54:00:d1:89:cf', u'name': u't3_VM1', u'vmif': u't3VM1if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "create": 0, "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM1", "vm_mac": "52:54:00:d1:89:cf", "vmif": "t3VM1if1", "vmif_m": "t3VM1if1_m"}]}

TASK [Start VM] *********************************************************************************************************************************************
ok: [99.99.99.2] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM1if1_m', u'vm_mac': u'52:54:00:d1:89:cf', u'name': u't3_VM1', u'vmif': u't3VM1if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM1", "vm_mac": "52:54:00:d1:89:cf", "vmif": "t3VM1if1", "vmif_m": "t3VM1if1_m"}]}

TASK [Create VETH Pairs] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM1if1_m', u'vm_mac': u'52:54:00:d1:89:cf', u'name': u't3_VM1', u'vmif': u't3VM1if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t3br1if1_m\" ; if [ $? -ne 0 ] ; then ip link add \"t3VM1if1_m\" type veth peer name \"t3br1if1_m\" ; fi\nip link set dev \"t3br1if1_m\" up\nip link set dev \"t3VM1if1_m\" up\n", "delta": "0:00:00.022804", "end": "2019-11-18 08:39:22.795098", "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM1", "vm_mac": "52:54:00:d1:89:cf", "vmif": "t3VM1if1", "vmif_m": "t3VM1if1_m"}], "rc": 0, "start": "2019-11-18 08:39:22.772294", "stderr": "Device \"t3br1if1_m\" does not exist.", "stderr_lines": ["Device \"t3br1if1_m\" does not exist."], "stdout": "", "stdout_lines": []}

TASK [Attach VETH Pairs] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM1if1_m', u'vm_mac': u'52:54:00:d1:89:cf', u'name': u't3_VM1', u'vmif': u't3VM1if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t3br1if1_m\" ; if [ $? -eq 0 ] ; then ip link set \"t3br1if1_m\" netns \"t3ns1\" ; fi\nip netns exec \"t3ns1\" brctl show \"t3br1\" | grep -w 't3br1if1_m' ; if [ $? -ne 0 ] ; then ip netns exec \"t3ns1\" brctl addif \"t3br1\" \"t3br1if1_m\" ; fi\nvirsh domiflist \"t3_VM1\" | grep -w \"t3VM1if1_m\" ; if [ $? -ne 0 ] ; then virsh attach-interface --domain \"t3_VM1\" direct \"t3VM1if1_m\" --live --persistent --mac \"52:54:00:d1:89:cf\" ; fi\n", "delta": "0:00:00.319231", "end": "2019-11-18 08:39:23.405551", "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM1", "vm_mac": "52:54:00:d1:89:cf", "vmif": "t3VM1if1", "vmif_m": "t3VM1if1_m"}], "rc": 0, "start": "2019-11-18 08:39:23.086320", "stderr": "", "stderr_lines": [], "stdout": "46: t3br1if1_m@t3VM1if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000\n    link/ether 62:98:4c:48:14:2d brd ff:ff:ff:ff:ff:ff\nInterface attached successfully", "stdout_lines": ["46: t3br1if1_m@t3VM1if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000", "    link/ether 62:98:4c:48:14:2d brd ff:ff:ff:ff:ff:ff", "Interface attached successfully"]}

TASK [Make all interfaces UP] *******************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM1if1_m', u'vm_mac': u'52:54:00:d1:89:cf', u'name': u't3_VM1', u'vmif': u't3VM1if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip netns exec \"t3ns1\" ip link set dev \"t3br1if1_m\" up\nip link set dev \"t3VM1if1_m\" up\n", "delta": "0:00:00.040610", "end": "2019-11-18 08:39:23.711264", "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM1", "vm_mac": "52:54:00:d1:89:cf", "vmif": "t3VM1if1", "vmif_m": "t3VM1if1_m"}], "rc": 0, "start": "2019-11-18 08:39:23.670654", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [main] *************************************************************************************************************************************************

TASK [pause] ************************************************************************************************************************************************
Pausing for 60 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [localhost] => {"changed": false, "delta": 60, "echo": true, "rc": 0, "start": "2019-11-18 08:39:23.801789", "stderr": "", "stdout": "Paused for 1.0 minutes", "stop": "2019-11-18 08:40:23.801970", "user_input": ""}

TASK [Undefine Migrated VM at C1] ***************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM1if1_m', u'vm_mac': u'52:54:00:d1:89:cf', u'name': u't3_VM1', u'vmif': u't3VM1if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh undefine \"t3_VM1\"\n", "delta": "0:00:00.031342", "end": "2019-11-18 08:40:24.049781", "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM1", "vm_mac": "52:54:00:d1:89:cf", "vmif": "t3VM1if1", "vmif_m": "t3VM1if1_m"}], "rc": 0, "start": "2019-11-18 08:40:24.018439", "stderr": "", "stderr_lines": [], "stdout": "Domain t3_VM1 has been undefined", "stdout_lines": ["Domain t3_VM1 has been undefined"]}

PLAY RECAP **************************************************************************************************************************************************
99.99.99.2                 : ok=9    changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
localhost                  : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /etc/ansible/ansible.cfg as config file

PLAY [worker] ***********************************************************************************************************************************************

TASK [Detach Interface] *************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM4if1_m', u'vm_mac': u'52:54:00:70:28:4c', u'name': u't3_VM4', u'vmif': u't3VM4if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh domiflist \"t3_VM4\" | grep -w \"t3VM4if1\" ; if [ $? -eq 0 ] ; then virsh detach-interface --domain \"t3_VM4\" --type direct --config ; fi\n", "delta": "0:00:00.063941", "end": "2019-11-18 08:40:26.220333", "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM4", "vm_mac": "52:54:00:70:28:4c", "vmif": "t3VM4if1", "vmif_m": "t3VM4if1_m"}], "rc": 0, "start": "2019-11-18 08:40:26.156392", "stderr": "", "stderr_lines": [], "stdout": "macvtap3   direct     t3VM4if1   rtl8139     52:54:00:70:28:4c\nInterface detached successfully", "stdout_lines": ["macvtap3   direct     t3VM4if1   rtl8139     52:54:00:70:28:4c", "Interface detached successfully"]}

TASK [Shutdown VMs] *****************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM4if1_m', u'vm_mac': u'52:54:00:70:28:4c', u'name': u't3_VM4', u'vmif': u't3VM4if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh list --state-shutoff | grep -w \"t3_VM4\" ; if [ $? -ne 0 ] ; then virsh shutdown \"t3_VM4\" ; fi\n", "delta": "0:00:00.168278", "end": "2019-11-18 08:40:26.738208", "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM4", "vm_mac": "52:54:00:70:28:4c", "vmif": "t3VM4if1", "vmif_m": "t3VM4if1_m"}], "rc": 0, "start": "2019-11-18 08:40:26.569930", "stderr": "", "stderr_lines": [], "stdout": "Domain t3_VM4 is being shutdown", "stdout_lines": ["Domain t3_VM4 is being shutdown"]}

PLAY [main] *************************************************************************************************************************************************

TASK [Migrate VM images] ************************************************************************************************************************************
An exception occurred during task execution. To see the full traceback, use -vvv. The error was: If you are using a module and expect the file to exist on the remote, see the remote_src option
failed: [localhost] (item=[{u'ns_name': u't3ns1', u'bridge_name': u't3br1'}, {u'vmif_m': u't3VM4if1_m', u'vm_mac': u'52:54:00:70:28:4c', u'name': u't3_VM4', u'vmif': u't3VM4if1', u'brif_m': u't3br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "item": [{"bridge_name": "t3br1", "ns_name": "t3ns1"}, {"brif_m": "t3br1if1_m", "name": "t3_VM4", "vm_mac": "52:54:00:70:28:4c", "vmif": "t3VM4if1", "vmif_m": "t3VM4if1_m"}], "msg": "Could not find or access '/var/lib/libvirt/images/t3_VM4.qcow2' on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}

PLAY RECAP **************************************************************************************************************************************************
99.99.99.2                 : ok=2    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
localhost                  : ok=0    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

Using /etc/ansible/ansible.cfg as config file

PLAY [main] *************************************************************************************************************************************************

TASK [Detach Interface] *************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM1if1_m', u'vm_mac': u'52:54:00:ab:5c:7c', u'name': u't4_VM1', u'vmif': u't4VM1if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh domiflist \"t4_VM1\" | grep -w \"t4VM1if1\" ; if [ $? -eq 0 ] ; then virsh detach-interface --domain \"t4_VM1\" --type direct --config ; fi\n", "delta": "0:00:00.057417", "end": "2019-11-18 10:45:35.919803", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM1", "vm_mac": "52:54:00:ab:5c:7c", "vmif": "t4VM1if1", "vmif_m": "t4VM1if1_m"}], "rc": 0, "start": "2019-11-18 10:45:35.862386", "stderr": "", "stderr_lines": [], "stdout": "macvtap9   direct     t4VM1if1   rtl8139     52:54:00:ab:5c:7c\nInterface detached successfully", "stdout_lines": ["macvtap9   direct     t4VM1if1   rtl8139     52:54:00:ab:5c:7c", "Interface detached successfully"]}

TASK [Shutdown VMs] *****************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM1if1_m', u'vm_mac': u'52:54:00:ab:5c:7c', u'name': u't4_VM1', u'vmif': u't4VM1if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh list --state-shutoff | grep -w \"t4_VM1\" ; if [ $? -ne 0 ] ; then virsh shutdown \"t4_VM1\" ; fi\n", "delta": "0:00:00.082324", "end": "2019-11-18 10:45:36.251064", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM1", "vm_mac": "52:54:00:ab:5c:7c", "vmif": "t4VM1if1", "vmif_m": "t4VM1if1_m"}], "rc": 0, "start": "2019-11-18 10:45:36.168740", "stderr": "", "stderr_lines": [], "stdout": "Domain t4_VM1 is being shutdown", "stdout_lines": ["Domain t4_VM1 is being shutdown"]}

TASK [Remove TEMP files] ************************************************************************************************************************************
changed: [localhost] => {"changed": true, "path": "/root/.ansible/tmp/", "state": "absent"}

PLAY [worker] ***********************************************************************************************************************************************

TASK [Remove TEMP files] ************************************************************************************************************************************
changed: [99.99.99.2] => {"changed": true, "path": "/root/.ansible/tmp/", "state": "absent"}

TASK [Migrate VM images] ************************************************************************************************************************************
FAILED - RETRYING: Migrate VM images (3 retries left).
changed: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM1if1_m', u'vm_mac': u'52:54:00:ab:5c:7c', u'name': u't4_VM1', u'vmif': u't4VM1if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "attempts": 2, "changed": true, "checksum": "6302e1a7ecc9969823e62663c4ef126a497120ff", "dest": "/var/lib/libvirt/images/t4_VM1.qcow2", "gid": 0, "group": "root", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM1", "vm_mac": "52:54:00:ab:5c:7c", "vmif": "t4VM1if1", "vmif_m": "t4VM1if1_m"}], "md5sum": "95a841c331eeb6821a0e0de607541754", "mode": "0644", "owner": "root", "size": 10739318784, "src": "/root/.ansible/tmp/ansible-tmp-1574073937.87-209237194175444/source", "state": "file", "uid": 0}

TASK [Migrate VM templates] *********************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM1if1_m', u'vm_mac': u'52:54:00:ab:5c:7c', u'name': u't4_VM1', u'vmif': u't4VM1if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "checksum": "ec85498e8a753cd39fd8a1efb81877dfb1656cd7", "dest": "/etc/libvirt/qemu/t4_VM1.xml", "gid": 0, "group": "root", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM1", "vm_mac": "52:54:00:ab:5c:7c", "vmif": "t4VM1if1", "vmif_m": "t4VM1if1_m"}], "md5sum": "7780179ea2484f3f6cbc76cb3d69ff24", "mode": "0644", "owner": "root", "size": 4252, "src": "/root/.ansible/tmp/ansible-tmp-1574074489.59-270653831279765/source", "state": "file", "uid": 0}

TASK [Get list of running VMs] ******************************************************************************************************************************
ok: [99.99.99.2] => {"changed": false, "cmd": ["virsh", "list", "--name"], "delta": "0:00:00.041227", "end": "2019-11-18 10:54:50.454759", "rc": 0, "start": "2019-11-18 10:54:50.413532", "stderr": "", "stderr_lines": [], "stdout": "t1_VM1\nt2_VM1\nt3_VM1\nt4_VM4", "stdout_lines": ["t1_VM1", "t2_VM1", "t3_VM1", "t4_VM4"]}

TASK [Define VM] ********************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM1if1_m', u'vm_mac': u'52:54:00:ab:5c:7c', u'name': u't4_VM1', u'vmif': u't4VM1if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "created": "t4_VM1", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM1", "vm_mac": "52:54:00:ab:5c:7c", "vmif": "t4VM1if1", "vmif_m": "t4VM1if1_m"}], "warnings": ["'xml' is given - ignoring 'name'"]}

TASK [Create VM] ********************************************************************************************************************************************
ok: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM1if1_m', u'vm_mac': u'52:54:00:ab:5c:7c', u'name': u't4_VM1', u'vmif': u't4VM1if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "create": 0, "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM1", "vm_mac": "52:54:00:ab:5c:7c", "vmif": "t4VM1if1", "vmif_m": "t4VM1if1_m"}]}

TASK [Start VM] *********************************************************************************************************************************************
ok: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM1if1_m', u'vm_mac': u'52:54:00:ab:5c:7c', u'name': u't4_VM1', u'vmif': u't4VM1if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM1", "vm_mac": "52:54:00:ab:5c:7c", "vmif": "t4VM1if1", "vmif_m": "t4VM1if1_m"}]}

TASK [Create VETH Pairs] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM1if1_m', u'vm_mac': u'52:54:00:ab:5c:7c', u'name': u't4_VM1', u'vmif': u't4VM1if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t4br1if1_m\" ; if [ $? -ne 0 ] ; then ip link add \"t4VM1if1_m\" type veth peer name \"t4br1if1_m\" ; fi\nip link set dev \"t4br1if1_m\" up\nip link set dev \"t4VM1if1_m\" up\n", "delta": "0:00:00.041721", "end": "2019-11-18 10:54:53.141672", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM1", "vm_mac": "52:54:00:ab:5c:7c", "vmif": "t4VM1if1", "vmif_m": "t4VM1if1_m"}], "rc": 0, "start": "2019-11-18 10:54:53.099951", "stderr": "Device \"t4br1if1_m\" does not exist.", "stderr_lines": ["Device \"t4br1if1_m\" does not exist."], "stdout": "", "stdout_lines": []}

TASK [Attach VETH Pairs] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM1if1_m', u'vm_mac': u'52:54:00:ab:5c:7c', u'name': u't4_VM1', u'vmif': u't4VM1if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t4br1if1_m\" ; if [ $? -eq 0 ] ; then ip link set \"t4br1if1_m\" netns \"t4ns1\" ; fi\nip netns exec \"t4ns1\" brctl show \"t4br1\" | grep -w 't4br1if1_m' ; if [ $? -ne 0 ] ; then ip netns exec \"t4ns1\" brctl addif \"t4br1\" \"t4br1if1_m\" ; fi\nvirsh domiflist \"t4_VM1\" | grep -w \"t4VM1if1_m\" ; if [ $? -ne 0 ] ; then virsh attach-interface --domain \"t4_VM1\" direct \"t4VM1if1_m\" --live --persistent --mac \"52:54:00:ab:5c:7c\" ; fi\n", "delta": "0:00:00.452528", "end": "2019-11-18 10:54:53.873899", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM1", "vm_mac": "52:54:00:ab:5c:7c", "vmif": "t4VM1if1", "vmif_m": "t4VM1if1_m"}], "rc": 0, "start": "2019-11-18 10:54:53.421371", "stderr": "", "stderr_lines": [], "stdout": "56: t4br1if1_m@t4VM1if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000\n    link/ether 66:21:01:94:07:41 brd ff:ff:ff:ff:ff:ff\nInterface attached successfully", "stdout_lines": ["56: t4br1if1_m@t4VM1if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000", "    link/ether 66:21:01:94:07:41 brd ff:ff:ff:ff:ff:ff", "Interface attached successfully"]}

TASK [Make all interfaces UP] *******************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM1if1_m', u'vm_mac': u'52:54:00:ab:5c:7c', u'name': u't4_VM1', u'vmif': u't4VM1if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip netns exec \"t4ns1\" ip link set dev \"t4br1if1_m\" up\nip link set dev \"t4VM1if1_m\" up\n", "delta": "0:00:00.044590", "end": "2019-11-18 10:54:54.179767", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM1", "vm_mac": "52:54:00:ab:5c:7c", "vmif": "t4VM1if1", "vmif_m": "t4VM1if1_m"}], "rc": 0, "start": "2019-11-18 10:54:54.135177", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [main] *************************************************************************************************************************************************

TASK [pause] ************************************************************************************************************************************************
Pausing for 60 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [localhost] => {"changed": false, "delta": 60, "echo": true, "rc": 0, "start": "2019-11-18 10:54:54.296766", "stderr": "", "stdout": "Paused for 1.0 minutes", "stop": "2019-11-18 10:55:54.296998", "user_input": ""}

TASK [Undefine Migrated VM at C1] ***************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM1if1_m', u'vm_mac': u'52:54:00:ab:5c:7c', u'name': u't4_VM1', u'vmif': u't4VM1if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh undefine \"t4_VM1\"\n", "delta": "0:00:00.037961", "end": "2019-11-18 10:55:54.614492", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM1", "vm_mac": "52:54:00:ab:5c:7c", "vmif": "t4VM1if1", "vmif_m": "t4VM1if1_m"}], "rc": 0, "start": "2019-11-18 10:55:54.576531", "stderr": "", "stderr_lines": [], "stdout": "Domain t4_VM1 has been undefined", "stdout_lines": ["Domain t4_VM1 has been undefined"]}

PLAY RECAP **************************************************************************************************************************************************
99.99.99.2                 : ok=10   changed=7    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
localhost                  : ok=5    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /etc/ansible/ansible.cfg as config file

PLAY [worker] ***********************************************************************************************************************************************

TASK [Detach Interface] *************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM4if1_m', u'vm_mac': u'52:54:00:c8:a4:b8', u'name': u't4_VM4', u'vmif': u't4VM4if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh domiflist \"t4_VM4\" | grep -w \"t4VM4if1\" ; if [ $? -eq 0 ] ; then virsh detach-interface --domain \"t4_VM4\" --type direct --config ; fi\n", "delta": "0:00:00.045495", "end": "2019-11-18 10:55:56.919883", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM4", "vm_mac": "52:54:00:c8:a4:b8", "vmif": "t4VM4if1", "vmif_m": "t4VM4if1_m"}], "rc": 0, "start": "2019-11-18 10:55:56.874388", "stderr": "", "stderr_lines": [], "stdout": "macvtap0   direct     t4VM4if1   rtl8139     52:54:00:c8:a4:b8\nInterface detached successfully", "stdout_lines": ["macvtap0   direct     t4VM4if1   rtl8139     52:54:00:c8:a4:b8", "Interface detached successfully"]}

TASK [Shutdown VMs] *****************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM4if1_m', u'vm_mac': u'52:54:00:c8:a4:b8', u'name': u't4_VM4', u'vmif': u't4VM4if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh list --state-shutoff | grep -w \"t4_VM4\" ; if [ $? -ne 0 ] ; then virsh shutdown \"t4_VM4\" ; fi\n", "delta": "0:00:00.134881", "end": "2019-11-18 10:55:57.405956", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM4", "vm_mac": "52:54:00:c8:a4:b8", "vmif": "t4VM4if1", "vmif_m": "t4VM4if1_m"}], "rc": 0, "start": "2019-11-18 10:55:57.271075", "stderr": "", "stderr_lines": [], "stdout": "Domain t4_VM4 is being shutdown", "stdout_lines": ["Domain t4_VM4 is being shutdown"]}

TASK [Remove TEMP files] ************************************************************************************************************************************
changed: [99.99.99.2] => {"changed": true, "path": "/root/.ansible/tmp/", "state": "absent"}

TASK [Migrate VM images] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM4if1_m', u'vm_mac': u'52:54:00:c8:a4:b8', u'name': u't4_VM4', u'vmif': u't4VM4if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "checksum": "ed8aeef24e33bfa341647a8556b6e1bb178cd83c", "dest": "/var/lib/libvirt/images/t4_VM4.qcow2", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM4", "vm_mac": "52:54:00:c8:a4:b8", "vmif": "t4VM4if1", "vmif_m": "t4VM4if1_m"}], "md5sum": "cb0422771339bc0457da2fc24a1beb01", "remote_checksum": "e4ddc7ec1cc6e3d7ef30b5a91336ea520fed30b6", "remote_md5sum": null}

TASK [Migrate VM templates] *********************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM4if1_m', u'vm_mac': u'52:54:00:c8:a4:b8', u'name': u't4_VM4', u'vmif': u't4VM4if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "checksum": "38ec8ad51912bf3e2f988d6fb872d24ea14a3f26", "dest": "/etc/libvirt/qemu/t4_VM4.xml", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM4", "vm_mac": "52:54:00:c8:a4:b8", "vmif": "t4VM4if1", "vmif_m": "t4VM4if1_m"}], "md5sum": "edd01cc53e19e4306b18068e080741d0", "remote_checksum": "38ec8ad51912bf3e2f988d6fb872d24ea14a3f26", "remote_md5sum": null}

PLAY [main] *************************************************************************************************************************************************

TASK [Get list of running VMs] ******************************************************************************************************************************
ok: [localhost] => {"changed": false, "cmd": ["virsh", "list", "--name"], "delta": "0:00:00.022404", "end": "2019-11-18 11:01:26.091289", "rc": 0, "start": "2019-11-18 11:01:26.068885", "stderr": "", "stderr_lines": [], "stdout": "t1_VM2\nt1_VM3\nt2_VM2\nt2_VM3\nt3_VM2\nt3_VM3\nt1_VM4\nt2_VM4\nt3_VM4\nt4_VM2\nt4_VM3", "stdout_lines": ["t1_VM2", "t1_VM3", "t2_VM2", "t2_VM3", "t3_VM2", "t3_VM3", "t1_VM4", "t2_VM4", "t3_VM4", "t4_VM2", "t4_VM3"]}

TASK [Define VM] ********************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM4if1_m', u'vm_mac': u'52:54:00:c8:a4:b8', u'name': u't4_VM4', u'vmif': u't4VM4if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "created": "t4_VM4", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM4", "vm_mac": "52:54:00:c8:a4:b8", "vmif": "t4VM4if1", "vmif_m": "t4VM4if1_m"}], "warnings": ["'xml' is given - ignoring 'name'"]}

TASK [Create VM] ********************************************************************************************************************************************
ok: [localhost] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM4if1_m', u'vm_mac': u'52:54:00:c8:a4:b8', u'name': u't4_VM4', u'vmif': u't4VM4if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "create": 0, "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM4", "vm_mac": "52:54:00:c8:a4:b8", "vmif": "t4VM4if1", "vmif_m": "t4VM4if1_m"}]}

TASK [Start VM] *********************************************************************************************************************************************
ok: [localhost] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM4if1_m', u'vm_mac': u'52:54:00:c8:a4:b8', u'name': u't4_VM4', u'vmif': u't4VM4if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM4", "vm_mac": "52:54:00:c8:a4:b8", "vmif": "t4VM4if1", "vmif_m": "t4VM4if1_m"}]}

TASK [Create VETH Pairs] ************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM4if1_m', u'vm_mac': u'52:54:00:c8:a4:b8', u'name': u't4_VM4', u'vmif': u't4VM4if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t4br1if1_m\" ; if [ $? -ne 0 ] ; then ip link add \"t4VM4if1_m\" type veth peer name \"t4br1if1_m\" ; fi\nip link set dev \"t4br1if1_m\" up\nip link set dev \"t4VM4if1_m\" up\n", "delta": "0:00:00.097829", "end": "2019-11-18 11:01:28.148997", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM4", "vm_mac": "52:54:00:c8:a4:b8", "vmif": "t4VM4if1", "vmif_m": "t4VM4if1_m"}], "rc": 0, "start": "2019-11-18 11:01:28.051168", "stderr": "Device \"t4br1if1_m\" does not exist.", "stderr_lines": ["Device \"t4br1if1_m\" does not exist."], "stdout": "", "stdout_lines": []}

TASK [Attach VETH Pairs] ************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM4if1_m', u'vm_mac': u'52:54:00:c8:a4:b8', u'name': u't4_VM4', u'vmif': u't4VM4if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t4br1if1_m\" ; if [ $? -eq 0 ] ; then ip link set \"t4br1if1_m\" netns \"t4ns1\" ; fi\nip netns exec \"t4ns1\" brctl show \"t4br1\" | grep -w 't4br1if1_m' ; if [ $? -ne 0 ] ; then ip netns exec \"t4ns1\" brctl addif \"t4br1\" \"t4br1if1_m\" ; fi\nvirsh domiflist \"t4_VM4\" | grep -w \"t4VM4if1_m\" ; if [ $? -ne 0 ] ; then virsh attach-interface --domain \"t4_VM4\" direct \"t4VM4if1_m\" --live --persistent --mac \"52:54:00:c8:a4:b8\" ; fi\n", "delta": "0:00:00.406037", "end": "2019-11-18 11:01:28.768092", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM4", "vm_mac": "52:54:00:c8:a4:b8", "vmif": "t4VM4if1", "vmif_m": "t4VM4if1_m"}], "rc": 0, "start": "2019-11-18 11:01:28.362055", "stderr": "", "stderr_lines": [], "stdout": "90: t4br1if1_m@t4VM4if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000\n    link/ether 2a:89:ae:a9:20:0d brd ff:ff:ff:ff:ff:ff\nInterface attached successfully", "stdout_lines": ["90: t4br1if1_m@t4VM4if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000", "    link/ether 2a:89:ae:a9:20:0d brd ff:ff:ff:ff:ff:ff", "Interface attached successfully"]}

TASK [Make all interfaces UP] *******************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM4if1_m', u'vm_mac': u'52:54:00:c8:a4:b8', u'name': u't4_VM4', u'vmif': u't4VM4if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip netns exec \"t4ns1\" ip link set dev \"t4br1if1_m\" up\nip link set dev \"t4VM4if1_m\" up\n", "delta": "0:00:00.040184", "end": "2019-11-18 11:01:29.010703", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM4", "vm_mac": "52:54:00:c8:a4:b8", "vmif": "t4VM4if1", "vmif_m": "t4VM4if1_m"}], "rc": 0, "start": "2019-11-18 11:01:28.970519", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [worker] ***********************************************************************************************************************************************

TASK [pause] ************************************************************************************************************************************************
Pausing for 60 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [99.99.99.2] => {"changed": false, "delta": 60, "echo": true, "rc": 0, "start": "2019-11-18 11:01:29.104560", "stderr": "", "stdout": "Paused for 1.0 minutes", "stop": "2019-11-18 11:02:29.105024", "user_input": ""}

TASK [Undefine Migrated VM at C2] ***************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't4ns1', u'bridge_name': u't4br1'}, {u'vmif_m': u't4VM4if1_m', u'vm_mac': u'52:54:00:c8:a4:b8', u'name': u't4_VM4', u'vmif': u't4VM4if1', u'brif_m': u't4br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh undefine \"t4_VM4\"\n", "delta": "0:00:00.022470", "end": "2019-11-18 11:02:30.186829", "item": [{"bridge_name": "t4br1", "ns_name": "t4ns1"}, {"brif_m": "t4br1if1_m", "name": "t4_VM4", "vm_mac": "52:54:00:c8:a4:b8", "vmif": "t4VM4if1", "vmif_m": "t4VM4if1_m"}], "rc": 0, "start": "2019-11-18 11:02:30.164359", "stderr": "", "stderr_lines": [], "stdout": "Domain t4_VM4 has been undefined", "stdout_lines": ["Domain t4_VM4 has been undefined"]}

PLAY RECAP **************************************************************************************************************************************************
99.99.99.2                 : ok=7    changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
localhost                  : ok=7    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /etc/ansible/ansible.cfg as config file

PLAY [main] *************************************************************************************************************************************************

TASK [Detach Interface] *************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:12:85:3b', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh domiflist \"t1_VM1\" | grep -w \"t1VM1if1\" ; if [ $? -eq 0 ] ; then virsh detach-interface --domain \"t1_VM1\" --type direct --config ; fi\n", "delta": "0:00:00.045941", "end": "2019-11-18 11:55:24.363670", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:12:85:3b", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 11:55:24.317729", "stderr": "", "stderr_lines": [], "stdout": "macvtap2   direct     t1VM1if1   rtl8139     52:54:00:12:85:3b\nInterface detached successfully", "stdout_lines": ["macvtap2   direct     t1VM1if1   rtl8139     52:54:00:12:85:3b", "Interface detached successfully"]}

TASK [Shutdown VMs] *****************************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:12:85:3b', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh list --state-shutoff | grep -w \"t1_VM1\" ; if [ $? -ne 0 ] ; then virsh shutdown \"t1_VM1\" ; fi\n", "delta": "0:00:00.152213", "end": "2019-11-18 11:55:24.753359", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:12:85:3b", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 11:55:24.601146", "stderr": "", "stderr_lines": [], "stdout": "Domain t1_VM1 is being shutdown", "stdout_lines": ["Domain t1_VM1 is being shutdown"]}

TASK [Remove TEMP files] ************************************************************************************************************************************
changed: [localhost] => {"changed": true, "path": "/root/.ansible/tmp/", "state": "absent"}

PLAY [worker] ***********************************************************************************************************************************************

TASK [Remove TEMP files] ************************************************************************************************************************************
changed: [99.99.99.2] => {"changed": true, "path": "/root/.ansible/tmp/", "state": "absent"}

TASK [Migrate VM images] ************************************************************************************************************************************
FAILED - RETRYING: Migrate VM images (3 retries left).
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:12:85:3b', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "attempts": 2, "changed": true, "checksum": "cc10ea5a965f369dd5c5cf7373b90b3f1807f5df", "dest": "/var/lib/libvirt/images/t1_VM1.qcow2", "gid": 0, "group": "root", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:12:85:3b", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "md5sum": "2f43a3a82af0b9a9865ac5a55fb59d46", "mode": "0644", "owner": "root", "size": 10739318784, "src": "/root/.ansible/tmp/ansible-tmp-1574078126.37-183030400491231/source", "state": "file", "uid": 0}

TASK [Migrate VM templates] *********************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:12:85:3b', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "checksum": "f9aca833bc51431d9d286c1d41f84d0e722786f5", "dest": "/etc/libvirt/qemu/t1_VM1.xml", "gid": 0, "group": "root", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:12:85:3b", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "md5sum": "f0dd671b817dab12ba977d21dbfa0256", "mode": "0644", "owner": "root", "size": 4252, "src": "/root/.ansible/tmp/ansible-tmp-1574078657.83-164554889471907/source", "state": "file", "uid": 0}

TASK [Get list of running VMs] ******************************************************************************************************************************
ok: [99.99.99.2] => {"changed": false, "cmd": ["virsh", "list", "--name"], "delta": "0:00:00.155630", "end": "2019-11-18 12:04:18.595641", "rc": 0, "start": "2019-11-18 12:04:18.440011", "stderr": "", "stderr_lines": [], "stdout": "t1_VM4", "stdout_lines": ["t1_VM4"]}

TASK [Define VM] ********************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:12:85:3b', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "created": "t1_VM1", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:12:85:3b", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "warnings": ["'xml' is given - ignoring 'name'"]}

TASK [Create VM] ********************************************************************************************************************************************
ok: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:12:85:3b', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "create": 0, "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:12:85:3b", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}]}

TASK [Start VM] *********************************************************************************************************************************************
ok: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:12:85:3b', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:12:85:3b", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}]}

TASK [Create VETH Pairs] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:12:85:3b', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t1br1if1_m\" ; if [ $? -ne 0 ] ; then ip link add \"t1VM1if1_m\" type veth peer name \"t1br1if1_m\" ; fi\nip link set dev \"t1br1if1_m\" up\nip link set dev \"t1VM1if1_m\" up\n", "delta": "0:00:00.021496", "end": "2019-11-18 12:04:21.051421", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:12:85:3b", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 12:04:21.029925", "stderr": "Device \"t1br1if1_m\" does not exist.", "stderr_lines": ["Device \"t1br1if1_m\" does not exist."], "stdout": "", "stdout_lines": []}

TASK [Attach VETH Pairs] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:12:85:3b', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip link show \"t1br1if1_m\" ; if [ $? -eq 0 ] ; then ip link set \"t1br1if1_m\" netns \"t1ns1\" ; fi\nip netns exec \"t1ns1\" brctl show \"t1br1\" | grep -w 't1br1if1_m' ; if [ $? -ne 0 ] ; then ip netns exec \"t1ns1\" brctl addif \"t1br1\" \"t1br1if1_m\" ; fi\nvirsh domiflist \"t1_VM1\" | grep -w \"t1VM1if1_m\" ; if [ $? -ne 0 ] ; then virsh attach-interface --domain \"t1_VM1\" direct \"t1VM1if1_m\" --live --persistent --mac \"52:54:00:12:85:3b\" ; fi\n", "delta": "0:00:00.365622", "end": "2019-11-18 12:04:21.699192", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:12:85:3b", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 12:04:21.333570", "stderr": "", "stderr_lines": [], "stdout": "21: t1br1if1_m@t1VM1if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000\n    link/ether a6:b4:fe:64:9c:2a brd ff:ff:ff:ff:ff:ff\nInterface attached successfully", "stdout_lines": ["21: t1br1if1_m@t1VM1if1_m: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default qlen 1000", "    link/ether a6:b4:fe:64:9c:2a brd ff:ff:ff:ff:ff:ff", "Interface attached successfully"]}

TASK [Make all interfaces UP] *******************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:12:85:3b', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "ip netns exec \"t1ns1\" ip link set dev \"t1br1if1_m\" up\nip link set dev \"t1VM1if1_m\" up\n", "delta": "0:00:00.039403", "end": "2019-11-18 12:04:21.996902", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:12:85:3b", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 12:04:21.957499", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}

PLAY [main] *************************************************************************************************************************************************

TASK [pause] ************************************************************************************************************************************************
Pausing for 60 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [localhost] => {"changed": false, "delta": 60, "echo": true, "rc": 0, "start": "2019-11-18 12:04:22.298600", "stderr": "", "stdout": "Paused for 1.0 minutes", "stop": "2019-11-18 12:05:22.298784", "user_input": ""}

TASK [Undefine Migrated VM at C1] ***************************************************************************************************************************
changed: [localhost] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM1if1_m', u'vm_mac': u'52:54:00:12:85:3b', u'name': u't1_VM1', u'vmif': u't1VM1if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh undefine \"t1_VM1\"\n", "delta": "0:00:00.024093", "end": "2019-11-18 12:05:22.566711", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM1", "vm_mac": "52:54:00:12:85:3b", "vmif": "t1VM1if1", "vmif_m": "t1VM1if1_m"}], "rc": 0, "start": "2019-11-18 12:05:22.542618", "stderr": "", "stderr_lines": [], "stdout": "Domain t1_VM1 has been undefined", "stdout_lines": ["Domain t1_VM1 has been undefined"]}

PLAY RECAP **************************************************************************************************************************************************
99.99.99.2                 : ok=10   changed=7    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
localhost                  : ok=5    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

Using /etc/ansible/ansible.cfg as config file

PLAY [worker] ***********************************************************************************************************************************************

TASK [Detach Interface] *************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM4if1_m', u'vm_mac': u'52:54:00:9c:22:28', u'name': u't1_VM4', u'vmif': u't1VM4if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh domiflist \"t1_VM4\" | grep -w \"t1VM4if1\" ; if [ $? -eq 0 ] ; then virsh detach-interface --domain \"t1_VM4\" --type direct --config ; fi\n", "delta": "0:00:00.059200", "end": "2019-11-18 12:05:24.883898", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM4", "vm_mac": "52:54:00:9c:22:28", "vmif": "t1VM4if1", "vmif_m": "t1VM4if1_m"}], "rc": 0, "start": "2019-11-18 12:05:24.824698", "stderr": "", "stderr_lines": [], "stdout": "macvtap0   direct     t1VM4if1   rtl8139     52:54:00:9c:22:28\nInterface detached successfully", "stdout_lines": ["macvtap0   direct     t1VM4if1   rtl8139     52:54:00:9c:22:28", "Interface detached successfully"]}

TASK [Shutdown VMs] *****************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM4if1_m', u'vm_mac': u'52:54:00:9c:22:28', u'name': u't1_VM4', u'vmif': u't1VM4if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "cmd": "virsh list --state-shutoff | grep -w \"t1_VM4\" ; if [ $? -ne 0 ] ; then virsh shutdown \"t1_VM4\" ; fi\n", "delta": "0:00:00.145905", "end": "2019-11-18 12:05:25.372479", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM4", "vm_mac": "52:54:00:9c:22:28", "vmif": "t1VM4if1", "vmif_m": "t1VM4if1_m"}], "rc": 0, "start": "2019-11-18 12:05:25.226574", "stderr": "", "stderr_lines": [], "stdout": "Domain t1_VM4 is being shutdown", "stdout_lines": ["Domain t1_VM4 is being shutdown"]}

TASK [Remove TEMP files] ************************************************************************************************************************************
changed: [99.99.99.2] => {"changed": true, "path": "/root/.ansible/tmp/", "state": "absent"}

TASK [Migrate VM images] ************************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM4if1_m', u'vm_mac': u'52:54:00:9c:22:28', u'name': u't1_VM4', u'vmif': u't1VM4if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "checksum": "f914dff3c82d8cd984778ab4c4f2b32a4e7a70b6", "dest": "/var/lib/libvirt/images/t1_VM4.qcow2", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM4", "vm_mac": "52:54:00:9c:22:28", "vmif": "t1VM4if1", "vmif_m": "t1VM4if1_m"}], "md5sum": "e1f053f769a3c9ceec06367e7aaf63b8", "remote_checksum": "6b08c1fbe14883a2d7241a329f2e71f31d18ffd8", "remote_md5sum": null}

TASK [Migrate VM templates] *********************************************************************************************************************************
changed: [99.99.99.2] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM4if1_m', u'vm_mac': u'52:54:00:9c:22:28', u'name': u't1_VM4', u'vmif': u't1VM4if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": true, "checksum": "b00edc74bd2b65e91745007547d96ad26fee0df8", "dest": "/etc/libvirt/qemu/t1_VM4.xml", "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM4", "vm_mac": "52:54:00:9c:22:28", "vmif": "t1VM4if1", "vmif_m": "t1VM4if1_m"}], "md5sum": "8b09ef7139bb8feb38d88c850dfad427", "remote_checksum": "b00edc74bd2b65e91745007547d96ad26fee0df8", "remote_md5sum": null}

PLAY [main] *************************************************************************************************************************************************

TASK [Get list of running VMs] ******************************************************************************************************************************
ok: [localhost] => {"changed": false, "cmd": ["virsh", "list", "--name"], "delta": "0:00:00.035839", "end": "2019-11-18 12:10:29.336616", "rc": 0, "start": "2019-11-18 12:10:29.300777", "stderr": "", "stderr_lines": [], "stdout": "t1_VM2\nt1_VM3", "stdout_lines": ["t1_VM2", "t1_VM3"]}

TASK [Define VM] ********************************************************************************************************************************************
ok: [localhost] => (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM4if1_m', u'vm_mac': u'52:54:00:9c:22:28', u'name': u't1_VM4', u'vmif': u't1VM4if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM4", "vm_mac": "52:54:00:9c:22:28", "vmif": "t1VM4if1", "vmif_m": "t1VM4if1_m"}], "warnings": ["'xml' is given - ignoring 'name'"]}

TASK [Create VM] ********************************************************************************************************************************************
An exception occurred during task execution. To see the full traceback, use -vvv. The error was: libvirtError: Unable to get index for interface t1VM4if1_m: No such device
failed: [localhost] (item=[{u'ns_name': u't1ns1', u'bridge_name': u't1br1'}, {u'vmif_m': u't1VM4if1_m', u'vm_mac': u'52:54:00:9c:22:28', u'name': u't1_VM4', u'vmif': u't1VM4if1', u'brif_m': u't1br1if1_m'}]) => {"ansible_loop_var": "item", "changed": false, "item": [{"bridge_name": "t1br1", "ns_name": "t1ns1"}, {"brif_m": "t1br1if1_m", "name": "t1_VM4", "vm_mac": "52:54:00:9c:22:28", "vmif": "t1VM4if1", "vmif_m": "t1VM4if1_m"}], "msg": "Unable to get index for interface t1VM4if1_m: No such device"}

PLAY RECAP **************************************************************************************************************************************************
99.99.99.2                 : ok=5    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   
localhost                  : ok=2    changed=0    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   

