---
# *************** Worker Tasks ************** #
- hosts: worker
  gather_facts: False
  vars:
    ansible_python_interpreter: /usr/bin/python3
    disk_dir: /var/lib/libvirt/images
    template_dir: /etc/libvirt/qemu
    ansible_ssh_pipelining: no
    sftp_batch_mode: yes

  vars_files:
    - /root/Migration-as-a-Service/src/northbound/config_files/migration/{{ tenant_name }}.yml
    - /root/Migration-as-a-Service/etc/{{ tenant_name }}/{{ tenant_name }}C2.yml
  
  tasks:
  - name: Detach Interface
    shell: |
      virsh domiflist "{{ item.1.name }}" | grep -w "{{ item.1.vmif }}" ; if [ $? -eq 0 ] ; then virsh detach-interface --domain "{{ item.1.name }}" --type direct --config ; fi
    with_subelements:
      - "{{ Migrate }}"
      - VM

  - name: Shutdown VMs
    shell: |
      virsh list --state-shutoff | grep -w "{{ item.1.name }}" ; if [ $? -ne 0 ] ; then virsh shutdown "{{ item.1.name }}" ; fi
    with_subelements:
      - "{{ Migrate }}"
      - VM

  - name: Remove TEMP files
    file:
      path: /root/.ansible/tmp/
      state: absent
    
  - name: Migrate VM images
    fetch:
      src: '{{ disk_dir }}/{{ item.1.name }}.qcow2'
      dest: '{{ disk_dir }}/'
      force: no
      flat: yes
      validate_checksum: no
    retries: 3
    delay: 2
    with_subelements:
      - "{{ Migrate }}"
      - VM 

  - name: Migrate VM templates
    fetch:
      src: '{{ template_dir }}/{{ item.1.name }}.xml'
      dest: '{{ template_dir }}/'
      flat: yes
    with_subelements:
      - "{{ Migrate }}"
      - VM

# ****************** Main Tasks ***************** #
- hosts: main
  gather_facts: False
  vars:
    ansible_python_interpreter: /usr/bin/python2
    disk_dir: /var/lib/libvirt/images
    template_dir: /etc/libvirt/qemu
    ansible_ssh_pipelining: no
    sftp_batch_mode: yes

  vars_files:
    - /root/Migration-as-a-Service/src/northbound/config_files/migration/{{ tenant_name }}.yml
    - /root/Migration-as-a-Service/etc/{{ tenant_name }}/{{ tenant_name }}C2.yml

  tasks:
  - name: Get list of running VMs
    command: virsh list --name
    register: vm_list
    changed_when: "vm_list.rc != 0"
    become: yes

  - name: Define VM
    virt:
      name: "{{ item.1.name }}"
      command: define
      xml: "{{ lookup('template', '{{ template_dir }}/{{ item.1.name }}.xml') }}"
    when: item.1.name not in vm_list.stdout
    with_subelements:
      - "{{ Migrate }}"
      - VM

  - name: Create VM
    virt:
      name: "{{ item.1.name }}"
      command: create
    when: item.1.name not in vm_list.stdout
    with_subelements: 
      - "{{ Migrate }}"
      - VM

  - name: Start VM
    virt:
      name: "{{ item.1.name }}"
      state: running
    when: item.1.name not in vm_list.stdout
    with_subelements: 
      - "{{ Migrate }}"
      - VM

  - name: Create VETH Pairs
    shell: |
      ip link show "{{ item.1.brif_m }}" ; if [ $? -ne 0 ] ; then ip link add "{{ item.1.vmif_m }}" type veth peer name "{{ item.1.brif_m }}" ; fi
      ip link set dev "{{ item.1.brif_m }}" up
      ip link set dev "{{ item.1.vmif_m }}" up
    with_subelements:
      - "{{ Migrate }}"
      - VM

  - name: Attach VETH Pairs
    shell: |
      ip link show "{{ item.1.brif_m }}" ; if [ $? -eq 0 ] ; then ip link set "{{ item.1.brif_m }}" netns "{{ item.0.ns_name }}" ; fi
      ip netns exec "{{ item.0.ns_name }}" brctl show "{{ item.0.bridge_name }}" | grep -w '{{ item.1.brif_m }}' ; if [ $? -ne 0 ] ; then ip netns exec "{{ item.0.ns_name }}" brctl addif "{{ item.0.bridge_name }}" "{{ item.1.brif_m }}" ; fi
      virsh domiflist "{{ item.1.name }}" | grep -w "{{ item.1.vmif_m }}" ; if [ $? -ne 0 ] ; then virsh attach-interface --domain "{{ item.1.name }}" direct "{{ item.1.vmif_m }}" --live --persistent --mac "{{ item.1.vm_mac }}" ; fi
    with_subelements:
      - "{{ Migrate }}"
      - VM

  - name: Make all interfaces UP
    shell: |
      ip netns exec "{{ item.0.ns_name }}" ip link set dev "{{ item.1.brif_m }}" up
      ip link set dev "{{ item.1.vmif_m }}" up
    with_subelements:
      - "{{ Migrate }}"
      - VM


# *********************** Worker Tasks ********************* #
- hosts: worker
  gather_facts: False
  vars:
    ansible_python_interpreter: /usr/bin/python3
    ansible_ssh_pipelining: no
    sftp_batch_mode: yes

  vars_files:
    - /root/Migration-as-a-Service/src/northbound/config_files/migration/{{ tenant_name }}.yml
    - /root/Migration-as-a-Service/etc/{{ tenant_name }}/{{ tenant_name }}C2.yml

  tasks:
  - pause:
      minutes: 1

  - name: Undefine Migrated VM at C2
    shell: |
      virsh undefine "{{ item.1.name }}"
    with_subelements:
      - "{{ Migrate }}"
      - VM
